#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

ETCDTESTDIR=".tmp/etcd-testdir"

if [ ! -d ".tmp" ]; then
    mkdir .tmp
fi

cleanup() {
  kill $(jobs -p) 2>/dev/null
  rm -r $ETCDTESTDIR
}
# cleanup on any kind of exit
trap "cleanup" SIGINT SIGTERM EXIT

is_etcd_up_on_4001() {
  if curl -fs "http://localhost:4001/v2/machines" 2>/dev/null; then
      return 0
  fi
  return 1
}

if is_etcd_up_on_4001 ; then
  echo "existing etcd on localhost:4001"
  exit 1
fi

if [ -d "$ETCDTESTDIR" ]; then
  rm -r $ETCDTESTDIR
fi

if [[ "$OSTYPE" == "darwin"* ]]; then
    .script/bin/etcd-darwin --data-dir $ETCDTESTDIR > /dev/null 2>&1 &
else
    .script/bin/etcd-linux --data-dir $ETCDTESTDIR > /dev/null 2>&1 &
fi

for i in $(seq 10); do
  sleep 1
  if is_etcd_up_on_4001; then
    break
  fi
done

if is_etcd_up_on_4001 ; then
  echo "etcd is running on localhost:4001"
else
  echo "etcd failed to run on localhost:4001"
  exit 1
fi

# testing
go test -v ./controller
go test -v ./framework
go test -v ./integration
go test -v ./op
go test -v ./filesystem
go test -v ./example/topo
