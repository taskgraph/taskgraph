syntax = "proto3";

package proto;

// block-wise matrix data service
service BlockData {
  rpc GetTShard(Request) returns (Response) {}
  rpc GetDShard(Request) returns (Response) {}
}

// Request for block matrix data at a given epoch.
message Request {
  uint64 epoch = 1;
}

// Response of the block matrix data, with the associated block id.
message Response {
  uint32 blockId = 1;
  DenseMatrixShard shard = 2;
}

// Matrix encapsulation. With row and Row, accessing an element will be `mat.Row[i].At[j]`

// sharded dense matrix data
// In bwmf, this message is for full D/T and sharded D/T data blocks.
message DenseMatrixShard {
  message DenseRow {
    repeated float at = 1;
  }

  repeated DenseRow row = 1;
}

// sharded matrix data
// In bwmf, this message is for sharded row/column data.
message SparseMatrixShard {
  message SparseRow {
    map<int32, float> at = 1;
  } 

  repeated SparseRow row = 1;
}



